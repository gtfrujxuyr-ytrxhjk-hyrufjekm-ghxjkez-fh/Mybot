name: Build Stockfish Dev (CMake, PGO, ThinLTO)

on:
  workflow_dispatch:

jobs:
  build-stockfish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake g++ clang lld curl

      - name: Clone Stockfish (latest master with CMake)
        run: |
          git clone https://github.com/official-stockfish/Stockfish.git engines/stockfish_src

      - name: Configure Stockfish build with CMake (PGO + ThinLTO)
        run: |
          mkdir -p build
          cd build
          cmake ../engines/stockfish_src \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_CXX_FLAGS="-march=native -flto=thin -fprofile-generate" \
            -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld"

      - name: Build Stockfish (Profile Generate)
        run: |
          cd build
          cmake --build . -j$(nproc)

      - name: Run training games to generate profile data
        run: |
          cd build
          ./stockfish bench 128 1 15 default depth

      - name: Re-configure for Profile Use
        run: |
          cd build
          rm -rf *
          cmake ../engines/stockfish_src \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_CXX_FLAGS="-march=native -flto=thin -fprofile-use -fprofile-correction" \
            -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld"

      - name: Final optimized build (PGO + ThinLTO)
        run: |
          cd build
          cmake --build . -j$(nproc)

      - name: Upload Stockfish binary
        uses: actions/upload-artifact@v4
        with:
          name: stockfish
          path: build/stockfish
